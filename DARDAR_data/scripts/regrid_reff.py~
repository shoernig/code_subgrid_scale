import os
from netCDF4 import Dataset
import numpy as np
import xarray as xr


def DARDAR_L2toL3_regrid(year,day):

    def metadata(var,unit,FillValue,longname,description):
        var.units       = unit
        #var.fill_value  = FillValue
        var.long_name   = longname
        var.description = description
        #var.missing_value = FillValue
        return(var)



    ipath = '/work/bb1093/b380620/DATA/Data/DARDAR_L2_cldclass_flag/'
    #day = '2008_06_12'
    #year = '2008'

    #====================== MODEL DATA GRID =====================
    nlon = 192
    nlat = 96
    nh   = 125

    lats = [88.57217, 86.72253, 84.86197, 82.99894, 81.13498, 79.27056, 77.40589, 75.54106, 73.67613, 71.81113, 69.94608, 68.08099, 66.21587, 64.35073,62.48557, 60.6204, 58.75521, 56.89001, 55.02481, 53.1596, 51.29438, 
    49.42915, 47.56393, 45.69869, 43.83346, 41.96822, 40.10298, 38.23774, 36.37249, 34.50724, 32.64199, 30.77674, 28.91149, 27.04624, 25.18099,23.31573, 21.45048, 19.58522, 17.71996, 15.8547, 13.98945, 12.12419,10.25893, 8.393669, 6.528409, 4.66315, 2.79789, 0.9326299, -0.9326299, -2.79789, -4.66315, -6.528409, -8.393669, -10.25893, -12.12419,-13.98945, -15.8547, -17.71996, -19.58522, -21.45048, -23.31573,-25.18099, -27.04624, -28.91149, -30.77674, -32.64199, -34.50724,-36.37249, -38.23774, -40.10298, -41.96822, -43.83346, -45.69869,-47.56393, -49.42915, -51.29438, -53.1596, -55.02481, -56.89001,-58.75521, -60.6204, -62.48557, -64.35073, -66.21587, -68.08099,-69.94608, -71.81113, -73.67613, -75.54106, -77.40589, -79.27056,-81.13498, -82.99894, -84.86197, -86.72253, -88.57217]
    
    lons = np.arange(0,360,360/nlon)-180


    # 3D VARIABLES
    iwc_mean = np.zeros([nh,nlat,nlon])
    pciwc_mean = np.zeros([nh,nlat,nlon])
    tiwc_mean = np.zeros([nh,nlat,nlon])
    iwcdar_mean = np.zeros([nh,nlat,nlon])
    pciwcdar_mean = np.zeros([nh,nlat,nlon])
    iwc_variance = np.zeros([nh,nlat,nlon])
    iwc_ct = np.zeros([nh,nlat,nlon])
    tiwc_ct = np.zeros([nh,nlat,nlon])
    pciwc_ct = np.zeros([nh,nlat,nlon])
    
    

    ta_ct = np.zeros([nh,nlat,nlon])
    ta_mean = np.zeros([nh,nlat,nlon])
    plev_mean = np.zeros([nh,nlat,nlon])
    hgt_mean = np.zeros([nh,nlat,nlon])
    cl_ice = np.zeros([nh,nlat,nlon])
    ct_total = np.zeros([nh,nlat,nlon])
    ct_plev = np.zeros([nh,nlat,nlon])
    ct_hgt  = np.zeros([nh,nlat,nlon])

    # 2D VARIABLES
    iwp_mean = np.zeros([nlat,nlon])
    tiwp_mean = np.zeros([nlat,nlon])
    pciwp_mean = np.zeros([nlat,nlon])
    
    

    
    iwp_ct   = np.zeros([nlat,nlon])


    

    #============================================================
    daypath = ipath+year+'/'+day
    files = os.listdir(daypath)

    if len(files)!= 0:
        print(len(files))
    else:
        print('no files in directory')
        return
    
        
            
    
    


    for ifile in files:
        print(ifile)



        nc = Dataset(daypath+'/'+ifile,'r')
        iwc = nc.variables['iwc'][:,:]
        pciwc = nc.variables['pciwc'][:,:]
        tiwc = nc.variables['tiwc'][:,:]
        
        
        latS = nc.variables['lat'][:]
        lonS = nc.variables['lon'][:]
        ta   = nc.variables['ta'][:]
        plev = nc.variables['plev'][:]
        hgt  = nc.variables['height'][:]
        hgt_bin  = nc.variables['nbin'][:]
        
        nc.close()
        

        #------------------------------------------------
        
        
        plev = np.where(plev<1e20,plev,0)
        ta   = np.where(ta<1e20,ta,0)
     
        mask_hgt = (np.where(hgt<0,0,1))
        
        
        iwc   = iwc*mask_hgt#*mask_t
        tiwc  = tiwc*mask_hgt
        pciwc = pciwc*mask_hgt
        iwcdar = iwcdar*mask_hgt
        pciwcdar = pciwcdar*mask_hgt
        

        
        

        iwc_iwp     = np.ma.sum(iwc * 240 ,axis=1)
        tiwc_tiwp   = np.ma.sum(tiwc * 240 ,axis=1)
        pciwc_pciwp = np.ma.sum(pciwc * 240 ,axis=1)

        iwc_iwp_dar     = np.ma.sum(iwcdar * 240 ,axis=1)
        pciwc_pciwp_dar = np.ma.sum(pciwcdar * 240 ,axis=1)

        

        mask_iwc = np.where(iwc>0,1,0)
        mask_pciwc = np.where(pciwc>0,1,0)
        mask_tiwc  = np.where(tiwc>0,1,0)

        mask_iwc_dar = np.where(iwcdar>0,1,0)
        mask_pciwc_dar = np.where(pciwcdar>0,1,0)


        mask_ta  = np.where(ta>0,1,0)
        mask_clice = np.where(iwc>=0.,1,0)
        mask_plev = np.where(plev>0,1,0)
        mask_iwp  = np.where(iwc_iwp>=0,1,0)
        mask_height = np.where(hgt>-1e20,1,0)
        
        #=======================================================
        
        print('iwc_max:',iwc.max())

        
        idyf = np.zeros([len(lonS),len(lats)])
        idy = np.zeros(len(lonS))

        idxf = (lonS+180.)*nlon/360
        ilon = idxf.astype(int)
        ilon = np.where(ilon==192,0,ilon)

        ilev = 101


        for t in range(len(lonS)):
            
            idyf[t,:] = latS[t]/lats[:]
            idy[t] = (np.abs(idyf[t,:]-1)).argmin()
            ilat = idy[t].astype(int)


            # IWC/IWP VARIABLES
            iwc_mean[:,ilat,ilon[t]] += np.where(iwc[t,:].mask == False,iwc[t,:],0)
            pciwc_mean[:,ilat,ilon[t]] +=  np.where(pciwc[t,:].mask == False,pciwc[t,:],0)
            tiwc_mean[:,ilat,ilon[t]] += np.where(tiwc[t,:].mask ==False,tiwc[t,:],0)

            iwcdar_mean[:,ilat,ilon[t]] += np.where(iwcdar[t,:].mask == False,iwcdar[t,:],0)
            pciwcdar_mean[:,ilat,ilon[t]] +=  np.where(pciwcdar[t,:].mask == False,pciwcdar[t,:],0)

            
            iwp_mean[ilat,ilon[t]]   +=  np.where(iwc_iwp[t]>0,iwc_iwp[t],0)
            tiwp_mean[ilat,ilon[t]]   +=  np.where(tiwc_tiwp[t]>0,tiwc_tiwp[t],0)
            pciwp_mean[ilat,ilon[t]]   +=  np.where(pciwc_pciwp[t]>0,pciwc_pciwp[t],0)

            iwpdar_mean[ilat,ilon[t]]   +=  np.where(iwc_iwp_dar[t]>0,iwc_iwp_dar[t],0)
            pciwpdar_mean[ilat,ilon[t]]   +=  np.where(pciwc_pciwp_dar[t]>0,pciwc_pciwp_dar[t],0)
            # for ilev in range(nh):
            #     print(t,tiwp_mean[ilat,ilon[t]] , iwp_mean[ilat,ilon[t]] )
            #     if t==99:
            #         exit()


            # T/PRESSURE/VARIANCE
            ta_mean[:,ilat,ilon[t]] += ta[t,:]
            plev_mean[:,ilat,ilon[t]] += plev[t,:]
            hgt_mean[:,ilat,ilon[t]] += hgt[t,:]
            iwc_variance[:,ilat,ilon[t]] += np.where(iwc[t,:].mask == False,iwc[t,:],0)**2 

            # COUNTER
            iwc_ct[:,ilat,ilon[t]]   += mask_iwc[t,:]
            pciwc_ct[:,ilat,ilon[t]] += mask_pciwc[t,:]
            tiwc_ct[:,ilat,ilon[t]]  += mask_tiwc[t,:]
            iwcdar_ct[:,ilat,ilon[t]]   += mask_iwc_dar[t,:]
            pciwcdar_ct[:,ilat,ilon[t]] += mask_pciwc_dar[t,:]
            
            ta_ct[:,ilat,ilon[t]]    += mask_ta[t,:]
            ct_total[:,ilat,ilon[t]] += mask_clice[t,:]
            ct_plev [:,ilat,ilon[t]] += mask_plev[t,:]
            iwp_ct[ilat,ilon[t]]     += mask_iwp[t]
            ct_hgt[:,ilat,ilon[t]]   += mask_height[t,:]
            
            #if(t%10000==0):
            if (t==10000):
                
                proc = t/len(latS)*100
                print(int(proc),'%','lat:',lats[ilat],latS[t],ilat,'  lon',lons[ilon[t]],lonS[t],ilon[t],'     iwc mean:',iwc_mean[ilev,ilat,ilon[t]],iwc_ct[ilev,ilat,ilon[t]],iwc[t,ilev],ct_total[ilev,ilat,ilon[t]],'     ta mean:',ta_mean[ilev,ilat,ilon[t]],ta_ct[ilev,ilat,ilon[t]],'   plev: ',plev[t,ilev]/100, plev_mean[ilev,ilat,ilon[t]],'   iwp:',iwp_mean[ilat,ilon[t]],iwc_iwp[t],iwp_ct[ilat,ilon[t]])
                
    

    #print(pciwp_mean.tolist())
    
        
    #==============================================================================
    opath = '/work/bb1093/b380620/DATA/Data/DARDAR_ICON_GCM_grid_R2B04/'+year
    ofile = opath+'/'+'DARDAR_ICON_GCM_grid_R2B04_'+day+'.nc'

    print(ofile)

    ncout = Dataset(ofile,mode="w",format='NETCDF4_CLASSIC')
    ncout.description = 'ice water content'

    Lat  = ncout.createDimension('lat',nlat)
    Lon  = ncout.createDimension('lon',nlon)
    hlev = ncout.createDimension('hlev',nh)




    Lons = ncout.createVariable('lon',np.float32,('lon',))
    Lats = ncout.createVariable('lat',np.float32,('lat',))
    hlevels = ncout.createVariable('hlev',np.float32,('hlev',))

    iwc_sum = ncout.createVariable('iwc_sum',np.float64,('hlev','lat','lon'))
    pciwc_sum = ncout.createVariable('pciwc_sum',np.float64,('hlev','lat','lon'))
    tiwc_sum = ncout.createVariable('tiwc_sum',np.float64,('hlev','lat','lon'))

    iwcdar_sum = ncout.createVariable('iwcdar_sum',np.float64,('hlev','lat','lon'))
    pciwcdar_sum = ncout.createVariable('pciwcdar_sum',np.float64,('hlev','lat','lon'))

    iwc_var = ncout.createVariable('iwc_var',np.float64,('hlev','lat','lon'))

    iwc_count = ncout.createVariable('iwc_count',np.float64,('hlev','lat','lon'))
    pciwc_count = ncout.createVariable('pciwc_count',np.float64,('hlev','lat','lon'))
    tiwc_count = ncout.createVariable('tiwc_count',np.float64,('hlev','lat','lon'))

    iwcdar_count = ncout.createVariable('iwcdar_count',np.float64,('hlev','lat','lon'))
    pciwcdar_count = ncout.createVariable('pciwcdar_count',np.float64,('hlev','lat','lon'))

    iwp_sum   = ncout.createVariable('iwp_sum',np.float64,('lat','lon'))
    tiwp_sum  = ncout.createVariable('tiwp_sum',np.float64,('lat','lon'))
    pciwp_sum = ncout.createVariable('pciwp_sum',np.float64,('lat','lon'))

    iwpdar_sum   = ncout.createVariable('iwpdar_sum',np.float64,('lat','lon'))
    pciwpdar_sum = ncout.createVariable('pciwpdar_sum',np.float64,('lat','lon'))
    
    iwp_count = ncout.createVariable('iwp_count',np.float64,('lat','lon'))
    total_count = ncout.createVariable('total_count',np.float64,('hlev','lat','lon'))


    ta_sum = ncout.createVariable('ta_sum',np.float64,('hlev','lat','lon'))
    ta_count = ncout.createVariable('ta_count',np.float64,('hlev','lat','lon'))

    plev_sum = ncout.createVariable('plev_sum',np.float64,('hlev','lat','lon'))
    plev_count = ncout.createVariable('plev_count',np.float64,('hlev','lat','lon'))

    hgt_sum = ncout.createVariable('hgt_sum',np.float64,('hlev','lat','lon'))
    hgt_count = ncout.createVariable('hgt_count',np.float64,('hlev','lat','lon'))

    #------- METADATA-----------------------------------------------------------------

    Lons = metadata(Lons,'degrees_east',-999.99,'longitude','')
    Lats = metadata(Lats,'degrees_north',-999.99,'latitude','')
    hlevels = metadata(hlevels,'m',-999.99,'Height','')
    iwc_sum = metadata(iwc_sum,'kg/m**3',-999.99,'sum of ice water content','flagged iwc')
    pciwc_sum = metadata(pciwc_sum,'kg/m**3',-999.99,'sum of ice water content','precipitating & convective iwc')
    tiwc_sum = metadata(tiwc_sum,'kg/m**3',-999.99,'sum of ice water content','total iwc')

    iwcdar_sum = metadata(iwcdar_sum,'kg/m**3',-999.99,'sum of ice water content','flagged iwc (DARDAR flag)')
    pciwcdar_sum = metadata(pciwcdar_sum,'kg/m**3',-999.99,'sum of ice water content','precipitating & convective iwc (DARDAR flag)')

    iwc_count = metadata(iwc_count,'',-999.99,'counts of ice water content','flagged iwc')
    pciwc_count = metadata(pciwc_count,'',-999.99,'counts of ice water content','precipitating & convective iwc')
    tiwc_count = metadata(tiwc_count,'',-999.99,'counts of ice water content','total iwc')
    total_count = metadata(total_count,'',-999.99,'total counts of the grid box','')

    iwcdar_count = metadata(iwcdar_count,'',-999.99,'counts of ice water content','flagged iwc (DARDAR flag)')
    pciwcdar_count = metadata(pciwcdar_count,'',-999.99,'counts of ice water content','precipitating & convective iwc (DARDAR flag)')

    iwc_var = metadata(iwc_var,'(kg/m**3)**2',-999.99,'squared sum of ice water content','flagged iwc')

    iwp_sum = metadata(iwp_sum,'kg/m**2',-999.99,'sum of ice water path','flagged iwp')
    tiwp_sum = metadata(tiwp_sum,'kg/m**2',-999.99,'sum of total ice water path','total iwp')
    pciwp_sum = metadata(pciwp_sum,'kg/m**2',-999.99,'sum of con. & prec. ice water path','precipitating & convective iwp')

    iwpdar_sum = metadata(iwpdar_sum,'kg/m**2',-999.99,'sum of ice water path','flagged iwp (DARDAR flag)')
    pciwpdar_sum = metadata(pciwpdar_sum,'kg/m**2',-999.99,'sum of con. & prec. ice water path','precipitating & convective iwp (DARDAR flag)')
    
    iwp_count = metadata(iwp_count,'',-999.99,'counts of ice water path','iwp count')

    ta_sum = metadata(ta_sum,'K',-999.99,'sum of air temperature','')
    ta_count = metadata(ta_count,'',-999.99,'counts of air temperature','')

    
    plev_sum  = metadata(plev_sum,'Pa',-999.99,'sum of air pressure','')
    plev_count = metadata(plev_count,'',-999.99,'counts of air pressure','')

    hgt_sum  = metadata(hgt_sum,'m',-999.99,'sum of height','')
    hgt_count = metadata(hgt_count,'',-999.99,'counts of height','')

    
    #--------------------------------------------------------------------------------

    Lons[:] = lons[:]
    Lats[:] = lats[:]
    hlevels[:] = hgt_bin[:]
    
    iwc_sum[:] = iwc_mean[:]
    pciwc_sum[:] = pciwc_mean[:]
    tiwc_sum[:] = tiwc_mean[:]

    iwcdar_sum[:] = iwcdar_mean[:]
    pciwcdar_sum[:] = pciwcdar_mean[:]
    
    iwc_var[:] = iwc_variance[:]

    
    iwc_count[:] = iwc_ct[:]
    pciwc_count[:] = pciwc_ct[:]
    tiwc_count[:] = tiwc_ct[:]

    iwcdar_count[:] = iwcdar_ct[:]
    pciwcdar_count[:] = pciwcdar_ct[:]

    
    iwp_sum[:]     = iwp_mean[:]
    tiwp_sum[:]    = tiwp_mean[:]
    pciwp_sum[:]   = pciwp_mean[:]

    iwpdar_sum[:]     = iwpdar_mean[:]
    pciwpdar_sum[:]   = pciwpdar_mean[:]
    
    iwp_count[:] = iwp_ct[:]
    total_count[:] = ct_total[:]
    
    ta_sum[:] = ta_mean[:]
    ta_count[:] = ta_ct[:]
    
    plev_count[:] = ct_plev[:]
    plev_sum[:] = plev_mean[:]

    hgt_count[:] = ct_hgt[:]
    hgt_sum[:]   = hgt_mean[:]
    

    ncout.close()
    

#days= ['2009_10_02','2009_09_10','2009_08_05','2009_07_27','2009_06_24','2009_04_30','2009_05_11','2009_03_25','2009_01_20','2009_02_10']

days = ['2008_03_17']

#path = '/work/bb1093/b380620/DATA/Data/2B-CLDCLASS/2009/'
#FILES = os.listdir(path)

#days = [ifile for ifile in FILES if "_01_" in ifile]
#print(days)
#for day in days:
#    DARDAR_L2toL3_regrid('2008',day)

    
    

    

    
